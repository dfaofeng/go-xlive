// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (user_id, username)
VALUES ($1, $2)
    RETURNING user_id, username, created_at
`

type CreateUserParams struct {
	UserID   string `json:"user_id"`
	Username string `json:"username"`
}

// 创建一个新用户，并返回创建后的所有字段
func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.UserID, arg.Username)
	var i User
	err := row.Scan(&i.UserID, &i.Username, &i.CreatedAt)
	return i, err
}

const getUserByID = `-- name: GetUserByID :one
SELECT user_id, username, created_at
FROM users
WHERE user_id = $1
    LIMIT 1
`

// 根据用户 ID 查询用户信息，限制返回一行
func (q *Queries) GetUserByID(ctx context.Context, userID string) (User, error) {
	row := q.db.QueryRow(ctx, getUserByID, userID)
	var i User
	err := row.Scan(&i.UserID, &i.Username, &i.CreatedAt)
	return i, err
}
