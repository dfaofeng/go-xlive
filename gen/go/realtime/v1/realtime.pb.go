// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: realtime/v1/realtime.proto

package realtimev1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	v1 "go-xlive/gen/go/event/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 订阅请求
type SubscribeSessionEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // 要订阅的会话 ID
}

func (x *SubscribeSessionEventsRequest) Reset() {
	*x = SubscribeSessionEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realtime_v1_realtime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeSessionEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeSessionEventsRequest) ProtoMessage() {}

func (x *SubscribeSessionEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_v1_realtime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeSessionEventsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeSessionEventsRequest) Descriptor() ([]byte, []int) {
	return file_realtime_v1_realtime_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeSessionEventsRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// 会话事件 (包含所有可能推送的事件类型)
type SessionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*SessionEvent_UserPresence
	//	*SessionEvent_ChatMessage
	//	*SessionEvent_StreamStatus
	//	*SessionEvent_GiftSent
	//	*SessionEvent_GuardPurchase
	//	*SessionEvent_SuperChatMessage
	//	*SessionEvent_WatchedCountUpdate
	//	*SessionEvent_LikeCountUpdate
	//	*SessionEvent_OnlineRankUpdate
	//	*SessionEvent_UserInteraction
	Event isSessionEvent_Event `protobuf_oneof:"event"`
}

func (x *SessionEvent) Reset() {
	*x = SessionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realtime_v1_realtime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionEvent) ProtoMessage() {}

func (x *SessionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_v1_realtime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionEvent.ProtoReflect.Descriptor instead.
func (*SessionEvent) Descriptor() ([]byte, []int) {
	return file_realtime_v1_realtime_proto_rawDescGZIP(), []int{1}
}

func (m *SessionEvent) GetEvent() isSessionEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SessionEvent) GetUserPresence() *v1.UserPresence {
	if x, ok := x.GetEvent().(*SessionEvent_UserPresence); ok {
		return x.UserPresence
	}
	return nil
}

func (x *SessionEvent) GetChatMessage() *v1.ChatMessage {
	if x, ok := x.GetEvent().(*SessionEvent_ChatMessage); ok {
		return x.ChatMessage
	}
	return nil
}

func (x *SessionEvent) GetStreamStatus() *v1.StreamStatus {
	if x, ok := x.GetEvent().(*SessionEvent_StreamStatus); ok {
		return x.StreamStatus
	}
	return nil
}

func (x *SessionEvent) GetGiftSent() *v1.GiftSent {
	if x, ok := x.GetEvent().(*SessionEvent_GiftSent); ok {
		return x.GiftSent
	}
	return nil
}

func (x *SessionEvent) GetGuardPurchase() *v1.GuardPurchase {
	if x, ok := x.GetEvent().(*SessionEvent_GuardPurchase); ok {
		return x.GuardPurchase
	}
	return nil
}

func (x *SessionEvent) GetSuperChatMessage() *v1.SuperChatMessage {
	if x, ok := x.GetEvent().(*SessionEvent_SuperChatMessage); ok {
		return x.SuperChatMessage
	}
	return nil
}

func (x *SessionEvent) GetWatchedCountUpdate() *v1.WatchedCountUpdate {
	if x, ok := x.GetEvent().(*SessionEvent_WatchedCountUpdate); ok {
		return x.WatchedCountUpdate
	}
	return nil
}

func (x *SessionEvent) GetLikeCountUpdate() *v1.LikeCountUpdate {
	if x, ok := x.GetEvent().(*SessionEvent_LikeCountUpdate); ok {
		return x.LikeCountUpdate
	}
	return nil
}

func (x *SessionEvent) GetOnlineRankUpdate() *v1.OnlineRankUpdate {
	if x, ok := x.GetEvent().(*SessionEvent_OnlineRankUpdate); ok {
		return x.OnlineRankUpdate
	}
	return nil
}

func (x *SessionEvent) GetUserInteraction() *v1.UserInteraction {
	if x, ok := x.GetEvent().(*SessionEvent_UserInteraction); ok {
		return x.UserInteraction
	}
	return nil
}

type isSessionEvent_Event interface {
	isSessionEvent_Event()
}

type SessionEvent_UserPresence struct {
	UserPresence *v1.UserPresence `protobuf:"bytes,1,opt,name=user_presence,json=userPresence,proto3,oneof"`
}

type SessionEvent_ChatMessage struct {
	ChatMessage *v1.ChatMessage `protobuf:"bytes,2,opt,name=chat_message,json=chatMessage,proto3,oneof"`
}

type SessionEvent_StreamStatus struct {
	StreamStatus *v1.StreamStatus `protobuf:"bytes,3,opt,name=stream_status,json=streamStatus,proto3,oneof"` // 添加 StreamStatus
}

type SessionEvent_GiftSent struct {
	GiftSent *v1.GiftSent `protobuf:"bytes,4,opt,name=gift_sent,json=giftSent,proto3,oneof"` // 取消注释并更新编号
}

type SessionEvent_GuardPurchase struct {
	GuardPurchase *v1.GuardPurchase `protobuf:"bytes,5,opt,name=guard_purchase,json=guardPurchase,proto3,oneof"` // 添加 GuardPurchase
}

type SessionEvent_SuperChatMessage struct {
	SuperChatMessage *v1.SuperChatMessage `protobuf:"bytes,6,opt,name=super_chat_message,json=superChatMessage,proto3,oneof"` // 添加 SuperChatMessage
}

type SessionEvent_WatchedCountUpdate struct {
	WatchedCountUpdate *v1.WatchedCountUpdate `protobuf:"bytes,7,opt,name=watched_count_update,json=watchedCountUpdate,proto3,oneof"` // 添加 WatchedCountUpdate
}

type SessionEvent_LikeCountUpdate struct {
	LikeCountUpdate *v1.LikeCountUpdate `protobuf:"bytes,8,opt,name=like_count_update,json=likeCountUpdate,proto3,oneof"` // 添加 LikeCountUpdate
}

type SessionEvent_OnlineRankUpdate struct {
	OnlineRankUpdate *v1.OnlineRankUpdate `protobuf:"bytes,9,opt,name=online_rank_update,json=onlineRankUpdate,proto3,oneof"` // 添加 OnlineRankUpdate
}

type SessionEvent_UserInteraction struct {
	UserInteraction *v1.UserInteraction `protobuf:"bytes,10,opt,name=user_interaction,json=userInteraction,proto3,oneof"` // 添加 UserInteraction
}

func (*SessionEvent_UserPresence) isSessionEvent_Event() {}

func (*SessionEvent_ChatMessage) isSessionEvent_Event() {}

func (*SessionEvent_StreamStatus) isSessionEvent_Event() {}

func (*SessionEvent_GiftSent) isSessionEvent_Event() {}

func (*SessionEvent_GuardPurchase) isSessionEvent_Event() {}

func (*SessionEvent_SuperChatMessage) isSessionEvent_Event() {}

func (*SessionEvent_WatchedCountUpdate) isSessionEvent_Event() {}

func (*SessionEvent_LikeCountUpdate) isSessionEvent_Event() {}

func (*SessionEvent_OnlineRankUpdate) isSessionEvent_Event() {}

func (*SessionEvent_UserInteraction) isSessionEvent_Event() {}

// 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 例如 "OK"
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_realtime_v1_realtime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_realtime_v1_realtime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_realtime_v1_realtime_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_realtime_v1_realtime_proto protoreflect.FileDescriptor

var file_realtime_v1_realtime_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65,
	0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32,
	0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3e, 0x0a, 0x1d, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc1, 0x05, 0x0a, 0x0c, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x73, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08,
	0x67, 0x69, 0x66, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x75, 0x61, 0x72,
	0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x75, 0x70, 0x65, 0x72, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x12, 0x77, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x6c, 0x69, 0x6b, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x6c, 0x69, 0x6b, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x4a, 0x0a, 0x12, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x2d,
	0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0x9d, 0x03,
	0x0a, 0x0f, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0xe9, 0x01, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x2e, 0x72,
	0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x85, 0x01, 0x92, 0x41, 0x57, 0x12, 0x12, 0xe8, 0xae, 0xa2, 0xe9, 0x98,
	0x85, 0xe4, 0xbc, 0x9a, 0xe8, 0xaf, 0x9d, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6, 0x1a, 0x41, 0xe9,
	0x80, 0x9a, 0xe8, 0xbf, 0x87, 0x20, 0x57, 0x65, 0x62, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x20,
	0xe6, 0x88, 0x96, 0xe6, 0x9c, 0x8d, 0xe5, 0x8a, 0xa1, 0xe5, 0x99, 0xa8, 0xe6, 0xb5, 0x81, 0xe8,
	0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x8c, 0x87, 0xe5, 0xae, 0x9a, 0xe4, 0xbc, 0x9a, 0xe8, 0xaf,
	0x9d, 0xe7, 0x9a, 0x84, 0xe5, 0xae, 0x9e, 0xe6, 0x97, 0xb6, 0xe4, 0xba, 0x8b, 0xe4, 0xbb, 0xb6,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x61, 0x6c,
	0x74, 0x69, 0x6d, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x30, 0x01, 0x12, 0x9d, 0x01,
	0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x92, 0x41, 0x35, 0x12, 0x0c, 0xe5, 0x81,
	0xa5, 0xe5, 0xba, 0xb7, 0xe6, 0xa3, 0x80, 0xe6, 0x9f, 0xa5, 0x1a, 0x25, 0xe6, 0xa3, 0x80, 0xe6,
	0x9f, 0xa5, 0x20, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x20, 0xe6, 0x9c, 0x8d, 0xe5,
	0x8a, 0xa1, 0xe7, 0x9a, 0x84, 0xe5, 0x81, 0xa5, 0xe5, 0xba, 0xb7, 0xe7, 0x8a, 0xb6, 0xe6, 0x80,
	0x81, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x61,
	0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a, 0x42, 0xea, 0x01,
	0x92, 0x41, 0xbe, 0x01, 0x12, 0x55, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65,
	0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x50, 0x49, 0x22, 0x38, 0x0a, 0x10,
	0x67, 0x6f, 0x2d, 0x78, 0x6c, 0x69, 0x76, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x24, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x6f, 0x75, 0x72, 0x5f, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x6f,
	0x2d, 0x78, 0x6c, 0x69, 0x76, 0x65, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f,
	0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
	0x73, 0x6f, 0x6e, 0x52, 0x1c, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x15, 0x0a, 0x13, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x2e, 0x52, 0x1f, 0x0a, 0x03, 0x35, 0x30, 0x30, 0x12, 0x18, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x20, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x2e, 0x5a, 0x26, 0x67, 0x6f, 0x2d, 0x78, 0x6c, 0x69, 0x76, 0x65, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x72, 0x65, 0x61, 0x6c, 0x74, 0x69, 0x6d, 0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_realtime_v1_realtime_proto_rawDescOnce sync.Once
	file_realtime_v1_realtime_proto_rawDescData = file_realtime_v1_realtime_proto_rawDesc
)

func file_realtime_v1_realtime_proto_rawDescGZIP() []byte {
	file_realtime_v1_realtime_proto_rawDescOnce.Do(func() {
		file_realtime_v1_realtime_proto_rawDescData = protoimpl.X.CompressGZIP(file_realtime_v1_realtime_proto_rawDescData)
	})
	return file_realtime_v1_realtime_proto_rawDescData
}

var file_realtime_v1_realtime_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_realtime_v1_realtime_proto_goTypes = []interface{}{
	(*SubscribeSessionEventsRequest)(nil), // 0: realtime.v1.SubscribeSessionEventsRequest
	(*SessionEvent)(nil),                  // 1: realtime.v1.SessionEvent
	(*HealthCheckResponse)(nil),           // 2: realtime.v1.HealthCheckResponse
	(*v1.UserPresence)(nil),               // 3: event.v1.UserPresence
	(*v1.ChatMessage)(nil),                // 4: event.v1.ChatMessage
	(*v1.StreamStatus)(nil),               // 5: event.v1.StreamStatus
	(*v1.GiftSent)(nil),                   // 6: event.v1.GiftSent
	(*v1.GuardPurchase)(nil),              // 7: event.v1.GuardPurchase
	(*v1.SuperChatMessage)(nil),           // 8: event.v1.SuperChatMessage
	(*v1.WatchedCountUpdate)(nil),         // 9: event.v1.WatchedCountUpdate
	(*v1.LikeCountUpdate)(nil),            // 10: event.v1.LikeCountUpdate
	(*v1.OnlineRankUpdate)(nil),           // 11: event.v1.OnlineRankUpdate
	(*v1.UserInteraction)(nil),            // 12: event.v1.UserInteraction
	(*emptypb.Empty)(nil),                 // 13: google.protobuf.Empty
}
var file_realtime_v1_realtime_proto_depIdxs = []int32{
	3,  // 0: realtime.v1.SessionEvent.user_presence:type_name -> event.v1.UserPresence
	4,  // 1: realtime.v1.SessionEvent.chat_message:type_name -> event.v1.ChatMessage
	5,  // 2: realtime.v1.SessionEvent.stream_status:type_name -> event.v1.StreamStatus
	6,  // 3: realtime.v1.SessionEvent.gift_sent:type_name -> event.v1.GiftSent
	7,  // 4: realtime.v1.SessionEvent.guard_purchase:type_name -> event.v1.GuardPurchase
	8,  // 5: realtime.v1.SessionEvent.super_chat_message:type_name -> event.v1.SuperChatMessage
	9,  // 6: realtime.v1.SessionEvent.watched_count_update:type_name -> event.v1.WatchedCountUpdate
	10, // 7: realtime.v1.SessionEvent.like_count_update:type_name -> event.v1.LikeCountUpdate
	11, // 8: realtime.v1.SessionEvent.online_rank_update:type_name -> event.v1.OnlineRankUpdate
	12, // 9: realtime.v1.SessionEvent.user_interaction:type_name -> event.v1.UserInteraction
	0,  // 10: realtime.v1.RealtimeService.SubscribeSessionEvents:input_type -> realtime.v1.SubscribeSessionEventsRequest
	13, // 11: realtime.v1.RealtimeService.HealthCheck:input_type -> google.protobuf.Empty
	1,  // 12: realtime.v1.RealtimeService.SubscribeSessionEvents:output_type -> realtime.v1.SessionEvent
	2,  // 13: realtime.v1.RealtimeService.HealthCheck:output_type -> realtime.v1.HealthCheckResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_realtime_v1_realtime_proto_init() }
func file_realtime_v1_realtime_proto_init() {
	if File_realtime_v1_realtime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_realtime_v1_realtime_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeSessionEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realtime_v1_realtime_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_realtime_v1_realtime_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_realtime_v1_realtime_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SessionEvent_UserPresence)(nil),
		(*SessionEvent_ChatMessage)(nil),
		(*SessionEvent_StreamStatus)(nil),
		(*SessionEvent_GiftSent)(nil),
		(*SessionEvent_GuardPurchase)(nil),
		(*SessionEvent_SuperChatMessage)(nil),
		(*SessionEvent_WatchedCountUpdate)(nil),
		(*SessionEvent_LikeCountUpdate)(nil),
		(*SessionEvent_OnlineRankUpdate)(nil),
		(*SessionEvent_UserInteraction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_realtime_v1_realtime_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_realtime_v1_realtime_proto_goTypes,
		DependencyIndexes: file_realtime_v1_realtime_proto_depIdxs,
		MessageInfos:      file_realtime_v1_realtime_proto_msgTypes,
	}.Build()
	File_realtime_v1_realtime_proto = out.File
	file_realtime_v1_realtime_proto_rawDesc = nil
	file_realtime_v1_realtime_proto_goTypes = nil
	file_realtime_v1_realtime_proto_depIdxs = nil
}
