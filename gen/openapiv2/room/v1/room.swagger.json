{
  "swagger": "2.0",
  "info": {
    "title": "room/v1/room.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "RoomService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/rooms": {
      "get": {
        "summary": "列出房间列表",
        "description": "支持按状态和平台过滤，并支持分页。",
        "operationId": "RoomService_ListRooms",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRoomsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "statusFilter",
            "description": "(可选) 按房间状态过滤 (例如 \"active\", \"inactive\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "platformFilter",
            "description": "(可选) 按平台标识过滤 (例如 \"bilibili\")",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "(可选) 每页返回的房间数量，默认为 20",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageOffset",
            "description": "(可选) 返回结果的偏移量，用于分页，默认为 0",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "RoomService"
        ]
      },
      "post": {
        "summary": "创建新房间",
        "description": "仅需提供平台、平台房间ID和所有者用户ID即可创建房间。",
        "operationId": "RoomService_CreateRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRoomRequest"
            }
          }
        ],
        "tags": [
          "RoomService"
        ]
      }
    },
    "/v1/rooms/healthz": {
      "get": {
        "summary": "服务健康检查",
        "operationId": "RoomService_HealthCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/roomv1HealthCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "RoomService"
        ]
      }
    },
    "/v1/rooms/{room.roomId}": {
      "put": {
        "summary": "更新房间信息",
        "description": "部分更新房间信息，目前支持更新 status 和 room_name 字段。",
        "operationId": "RoomService_UpdateRoom2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "room.roomId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "room",
            "description": "包含要更新的字段的 Room 对象 (room_id 必须提供)",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "roomName": {
                  "type": "string"
                },
                "ownerUserId": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "platform": {
                  "type": "string"
                },
                "platformRoomId": {
                  "type": "string"
                },
                "areaName": {
                  "type": "string"
                },
                "anchorName": {
                  "type": "string",
                  "title": "主播名称 (新增)"
                }
              },
              "title": "包含要更新的字段的 Room 对象 (room_id 必须提供)"
            }
          },
          {
            "name": "updateMask",
            "description": "指定要更新的字段路径 (例如 \"status\")。注意：area_name 不允许通过此接口更新。room_name 可以通过 update_mask 更新。",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RoomService"
        ]
      },
      "patch": {
        "summary": "更新房间信息",
        "description": "部分更新房间信息，目前支持更新 status 和 room_name 字段。",
        "operationId": "RoomService_UpdateRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "room.roomId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "room",
            "description": "包含要更新的字段的 Room 对象 (room_id 必须提供)",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "roomName": {
                  "type": "string"
                },
                "ownerUserId": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "platform": {
                  "type": "string"
                },
                "platformRoomId": {
                  "type": "string"
                },
                "areaName": {
                  "type": "string"
                },
                "anchorName": {
                  "type": "string",
                  "title": "主播名称 (新增)"
                }
              },
              "title": "包含要更新的字段的 Room 对象 (room_id 必须提供)"
            }
          }
        ],
        "tags": [
          "RoomService"
        ]
      }
    },
    "/v1/rooms/{roomId}": {
      "get": {
        "summary": "获取房间信息",
        "operationId": "RoomService_GetRoom",
        "responses": {
          "200": {
            "description": "获取房间信息成功。",
            "schema": {
              "$ref": "#/definitions/v1Room",
              "example": {
                "room_id": "123456",
                "room_name": "我的直播间",
                "owner_user_id": "987654321",
                "status": "active",
                "platform": "bilibili",
                "platform_room_id": "987654321",
                "area_name": "我的直播间",
                "anchor_name": "我的主播"
              },
              "description": "房间信息"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "description": "要获取的房间的内部唯一 ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoomService"
        ]
      },
      "delete": {
        "summary": "删除房间",
        "description": "根据房间 ID 删除房间。注意：这通常是一个危险操作，请谨慎使用。",
        "operationId": "RoomService_DeleteRoom",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "roomId",
            "description": "要删除的房间的内部唯一 ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RoomService"
        ]
      }
    },
    "/v1/rooms:byPlatformId": {
      "get": {
        "summary": "根据平台 ID 获取房间",
        "operationId": "RoomService_GetRoomByPlatformID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRoomResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "platform",
            "description": "房间所属的平台标识",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "platformRoomId",
            "description": "房间在对应平台上的原始 ID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RoomService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "roomv1HealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      },
      "title": "健康检查响应 (新增)"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateRoomRequest": {
      "type": "object",
      "properties": {
        "ownerUserId": {
          "type": "string",
          "description": "房间所有者的用户 ID",
          "title": "string room_name = 1; // 移除 room_name，应由后端自动获取"
        },
        "platform": {
          "type": "string",
          "title": "房间所属的平台标识 (例如 \"bilibili\", \"douyin\")"
        },
        "platformRoomId": {
          "type": "string",
          "title": "房间在对应平台上的原始 ID"
        }
      }
    },
    "v1CreateRoomResponse": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/v1Room"
        }
      }
    },
    "v1GetRoomResponse": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/v1Room"
        },
        "owner": {
          "$ref": "#/definitions/v1User"
        }
      },
      "title": "GetRoomResponse 保持不变，因为 GetRoomByPlatformID 也返回房间和房主信息"
    },
    "v1ListRoomsResponse": {
      "type": "object",
      "properties": {
        "rooms": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Room"
          },
          "title": "房间列表"
        }
      },
      "title": "新增: ListRooms 响应"
    },
    "v1Room": {
      "type": "object",
      "properties": {
        "roomId": {
          "type": "string"
        },
        "roomName": {
          "type": "string"
        },
        "ownerUserId": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "platformRoomId": {
          "type": "string"
        },
        "areaName": {
          "type": "string"
        },
        "anchorName": {
          "type": "string",
          "title": "主播名称 (新增)"
        }
      }
    },
    "v1UpdateRoomResponse": {
      "type": "object",
      "properties": {
        "room": {
          "$ref": "#/definitions/v1Room"
        }
      },
      "title": "新增: UpdateRoom 响应"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "followerCount": {
          "type": "integer",
          "format": "int32",
          "title": "可以添加 updated_at 等字段"
        }
      }
    }
  }
}
